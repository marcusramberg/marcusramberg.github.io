<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Devops on marcus</title><link>https://marcus.means.no/tags/devops/</link><description>Recent content in Devops on marcus</description><generator>Hugo</generator><language>en-us</language><copyright>Code released under the MIT license.</copyright><lastBuildDate>Mon, 10 Mar 2025 15:30:42 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Simply deploying to private GKE cluster from Cloud Build</title><link>https://marcus.means.no/post/2022-03-31-simply-deploying-to-private-gke-cluster-from-cloud-build/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0200</pubDate><guid>https://marcus.means.no/post/2022-03-31-simply-deploying-to-private-gke-cluster-from-cloud-build/</guid><description>&lt;p>I recently came back to Google&amp;rsquo;s Cloud Platform after some years on other cloud platforms, and as part of my work
there I had the requirement to setup a secure GCP cluster for some workloads. Google engineers have provided a nice
blueprint for this using a &lt;a href="https://registry.terraform.io/modules/terraform-google-modules/kubernetes-engine/google/latest/examples/safer_cluster_iap_bastion?tab=outputs">IAP Proxy Bastion host for external
access&lt;/a>,
which works well for safe access from developer machines and allows you to limit Identity Aware Proxy access by GCP
Security Groups.&lt;/p></description></item><item><title>journald logs since last service restart.</title><link>https://marcus.means.no/post/2020-10-30-journald-logs-since-last-service-restart-dot/</link><pubDate>Fri, 30 Oct 2020 00:00:00 +0100</pubDate><guid>https://marcus.means.no/post/2020-10-30-journald-logs-since-last-service-restart-dot/</guid><description>&lt;p>While debugging services I often want to see the systemd service log since last restart. Unfortunately doing this isn&amp;rsquo;t
obvious, but there is a way.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>journalctl _SYSTEMD_INVOCATION_ID&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>systemctl show --value -p InvocationID docker-hass&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where docker-hass is your service. I should probably add an alias for this to my dotfiles.&lt;/p></description></item><item><title>Haproxy-lua-jwt</title><link>https://marcus.means.no/post/2020-08-17-haproxy-lua-jwt-/</link><pubDate>Mon, 17 Aug 2020 23:55:02 +0200</pubDate><guid>https://marcus.means.no/post/2020-08-17-haproxy-lua-jwt-/</guid><description>&lt;p>JWT Validation implementation for HAProxy Lua host&lt;/p></description></item><item><title>httpstat - great curl visualization</title><link>https://marcus.means.no/post/2020-08-12-httpstat-great-curl-visualization/</link><pubDate>Wed, 12 Aug 2020 00:00:00 +0200</pubDate><guid>https://marcus.means.no/post/2020-08-12-httpstat-great-curl-visualization/</guid><description>&lt;p>Great little tool for seeing HTTP timing stats.&lt;/p>
&lt;img alt="httpstat screenshot" src="https://marcus.means.no/images/2024-01-02-httpstat.png" width=700/></description></item><item><title>Avoid 'no data' in your prometheus queries</title><link>https://marcus.means.no/post/2020-08-11-avoid-no-data-in-your-prometheus-queries/</link><pubDate>Mon, 10 Aug 2020 00:00:00 +0200</pubDate><guid>https://marcus.means.no/post/2020-08-11-avoid-no-data-in-your-prometheus-queries/</guid><description>&lt;p>CLOSED: &lt;span class="timestamp-wrapper">&lt;span class="timestamp">[2020-08-10 Mon 20:57]&lt;/span>&lt;/span>
Have some Prometheus queries that sometimes give no results? For instance error rate when there are no errors. Just
append ~or vector(0) and the query will return 0 instead of an empty vector.&lt;/p></description></item><item><title>Terraform input validation</title><link>https://marcus.means.no/post/2020-07-21-terraform-input-validation-/</link><pubDate>Tue, 21 Jul 2020 09:24:14 +0200</pubDate><guid>https://marcus.means.no/post/2020-07-21-terraform-input-validation-/</guid><description>&lt;p>Great intro to this recent feature by Wilson.&lt;/p></description></item><item><title>Draft</title><link>https://marcus.means.no/post/2020-06-27-draft/</link><pubDate>Sat, 27 Jun 2020 23:03:26 +0200</pubDate><guid>https://marcus.means.no/post/2020-06-27-draft/</guid><description>&lt;p>Generate High Level Cloud Architecture diagrams using YAML syntax - Def need to test this out at work for generating documentation.&lt;/p></description></item><item><title>How Cloudflare is using Nomad</title><link>https://marcus.means.no/post/how-cloudflare-is-using-nomad/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0200</pubDate><guid>https://marcus.means.no/post/how-cloudflare-is-using-nomad/</guid><description>&lt;p>Hashicorp has made some of my favorite tools for cloud architecture, including Terraform, Consul and Vault. One
interesting component I&amp;rsquo;ve yet to try is Nomad; a lightweight alternative to Kubernetes for keeping your container
workload running.&lt;/p>
&lt;p>Cool to see how Cloudflare is using it.&lt;/p></description></item><item><title>NoOps is an awful word</title><link>https://marcus.means.no/post/2015-01-06-noops-must-die/</link><pubDate>Tue, 06 Jan 2015 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2015-01-06-noops-must-die/</guid><description>&lt;blockquote>
&lt;p>What do IT Ops do? We manage IT risk on behalf of the business. Thinking Ops is about servers is like thinking Dev
is about code cutting.&lt;/p>&lt;/blockquote>
&lt;p>If you think devops means eliminating operations, you don&amp;rsquo;t understand development &lt;em>or&lt;/em> operations.&lt;/p></description></item><item><title>Continuous Delivery with Drone and Dokku</title><link>https://marcus.means.no/post/2014-05-10-continous-delivery-with-drone-and-dokku/</link><pubDate>Sat, 10 May 2014 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2014-05-10-continous-delivery-with-drone-and-dokku/</guid><description>&lt;p>A part of my job as CTO of &lt;a href="http://theoutput.co/">Output&lt;/a> is managing our
deployment and production systems. To this end, I&amp;rsquo;ve spent a lot of time
working with virtualization, Docker and automation recently. I&amp;rsquo;ll try to share
some of our experiences here in the months to come. One of our biggest
challenges has been to get a good testing culture internally. To that end, I
wanted a solid solution for CI.&lt;/p>
&lt;p>This seems like a solved problem. Just fire up Jenkins, and you&amp;rsquo;re done.
However, there are always complications. Hard to install dependencies, Selenium
tests, required infrastructure services. That is why I have grown to love
&lt;a href="http://github.com/drone/drone">Drone&lt;/a>. Run your test suite in a clean docker
image every time, cache your dependencies (just like Heroku does), and run a
deploy action of your choice if the test succeed. Drone also supports various
notification mechanisms, including Email (of course), IM and our favorite
Slack.&lt;/p></description></item></channel></rss>