<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Performance on Suburban Nerd</title><link>https://marcus.nordaaker.com/tags/performance/</link><description>Recent content in Performance on Suburban Nerd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Code released under the Apache 2.0 license.</copyright><lastBuildDate>Thu, 05 Mar 2009 00:00:00 +0000</lastBuildDate><atom:link href="https://marcus.nordaaker.com/tags/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Optimizing for performance.</title><link>https://marcus.nordaaker.com/post/2009-03-05-optimizing-for-performance-/</link><pubDate>Thu, 05 Mar 2009 00:00:00 +0000</pubDate><guid>https://marcus.nordaaker.com/post/2009-03-05-optimizing-for-performance-/</guid><description>Thanks to mr. Gruber for linking to this really interesting acticle about performance policies in the WebKit project:
We have a zero-tolerance policy for performance regressions. If a patch lands that regresses performance according to our benchmarks, then the person responsible must either back the patch out of the tree or drop everything immediately and fix the regression.
As we've been working towards Catalyst 5.8, I think this is a test we need to get in place to ensure that 5.</description></item></channel></rss>