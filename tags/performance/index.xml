<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Performance on marcus</title><link>https://marcus.means.no/tags/performance/</link><description>Recent content in Performance on marcus</description><generator>Hugo</generator><language>en-us</language><copyright>Code released under the MIT license.</copyright><lastBuildDate>Mon, 28 Jul 2025 14:37:49 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Optimizing for performance.</title><link>https://marcus.means.no/post/2009-03-05-optimizing-for-performance-/</link><pubDate>Thu, 05 Mar 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-03-05-optimizing-for-performance-/</guid><description>&lt;p>
 Thanks to &lt;a href="http://daringfireball.net">Mr. Gruber&lt;/a> for linking to
 this really interesting article about performance policies in the WebKit
 project:
&lt;/p>
&lt;blockquote>
 &lt;p>
 We have a zero-tolerance policy for performance regressions. If a patch
 lands that regresses performance according to our benchmarks, then the
 person responsible must either back the patch out of the tree or drop
 everything immediately and fix the regression.
 &lt;/p>
&lt;/blockquote>
&lt;p>
 As we've been working towards Catalyst 5.8, I think this is a test we need to
 get in place to ensure that 5.8 can handle the same volume of request
 processing as the previous version.
&lt;/p></description></item></channel></rss>