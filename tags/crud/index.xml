<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Crud on marcus</title><link>https://marcus.means.no/tags/crud/</link><description>Recent content in Crud on marcus</description><generator>Hugo</generator><language>en-us</language><copyright>Code released under the MIT license.</copyright><lastBuildDate>Mon, 10 Mar 2025 21:55:37 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/crud/index.xml" rel="self" type="application/rss+xml"/><item><title>Catalyst::Plugin::AutoCRUD</title><link>https://marcus.means.no/post/2009-09-02-catalystpluginautocrud/</link><pubDate>Wed, 02 Sep 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-09-02-catalystpluginautocrud/</guid><description>&lt;p>&lt;em>One major factor in Catalyst's success has been extensibility. I plan to
do a series on extensions that I've found useful recently. To kick it off,
I'll feature a model which gives me a simple and useful admin interface to
my DBIx::Class models.&lt;/em>&lt;/p>
&lt;p>When I first got involved with MVC Web Frameworks like Maypole and Ruby on
Rails, a big selling point was the ability to generate CRUD (Create/Read/
Update/Delete) interfaces to your data model. Ruby on Rails does this through
a mechanism called scaffolding, where it adds a set of actions to your
controller. It soon became apparent that these CRUD frameworks did not live
up to their promise as a base for creating your own custom actions. Usually,
you spend more time customizing these controllers than you would just
implementing the features you require.&lt;/p></description></item></channel></rss>