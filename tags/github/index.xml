<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github on marcus</title><link>https://marcus.means.no/tags/github/</link><description>Recent content in github on marcus</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Code released under the MIT license.</copyright><lastBuildDate>Tue, 11 Aug 2020 19:54:00 +0200</lastBuildDate><atom:link href="https://marcus.means.no/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>More praise for magit</title><link>https://marcus.means.no/post/2020-08-08-more-praise-for-magit/</link><pubDate>Tue, 11 Aug 2020 19:54:00 +0200</pubDate><guid>https://marcus.means.no/post/2020-08-08-more-praise-for-magit/</guid><description>I know I&amp;rsquo;ve mentioned magit before here, but I think this post shows a lot of the power you get from magit, which now makes it preferable to me even over the CLI.</description></item><item><title>Magit Forge on macOS</title><link>https://marcus.means.no/post/2020-08-01-magit-forge-on-macos/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0200</pubDate><guid>https://marcus.means.no/post/2020-08-01-magit-forge-on-macos/</guid><description>I&amp;rsquo;ve tried many editor git integrations over the years, in Vim, VS Code, IntelliJ, Sublime, as well as various git guis. However I&amp;rsquo;ve never found something nearly as powerful and efficient day to day as working on the command line.
While I will probably never give up the command line, with Emacs&amp;rsquo; Magit I&amp;rsquo;ve finally found a valuable companion which feels as powerful and efficient as the cli interface. The magit status window is a super powerful base point for most git operations.</description></item><item><title>How GitHub uses GitHub to document GitHub</title><link>https://marcus.means.no/post/2015-01-06-github-documentation/</link><pubDate>Tue, 06 Jan 2015 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2015-01-06-github-documentation/</guid><description>Documentation teams across GitHub can take advantage of the GitHub Flow, Jekyll 2.0, and GitHub Pages to produce high-quality documentation. The benefits that GitHub Pages provides to our Documentation team is already available to any user running a GitHub Pages site.
Great dogfooding</description></item><item><title>Github adds inline commit notes.</title><link>https://marcus.means.no/post/2010-03-28-github-adds-inline-commit-notes/</link><pubDate>Sun, 28 Mar 2010 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2010-03-28-github-adds-inline-commit-notes/</guid><description>Github is probably much of the reason we love using git at Nordaaker. The great overview and administration system, as well as the simple no-nonsense issue tracker works very efficiently for us. Now github has added another feature that I think will help us collaborating efficiently on code.
Inline commit notes lets you comment anywhere in a commit, lending itself to quick code reviews and clarifications.</description></item><item><title>GitHub:FI pricing now public</title><link>https://marcus.means.no/post/2009-06-11-githubfi-pricing-now-public/</link><pubDate>Thu, 11 Jun 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-06-11-githubfi-pricing-now-public/</guid><description>GitHub created a headache for themselves at the initial launch of their inhouse hosting option for companies wanting to use GitHub.
That, coupled with the fact that we wanted companies to sign an NDA before receiving their quote, slowed the entire process down. It also bewildered more than a few people wondering why lawyers needed to be involved just to figure out how much the product cost.
Well, now they are up for everybody to see, but boy, with prices like that, I can see why they would like to keep them secret.</description></item></channel></rss>