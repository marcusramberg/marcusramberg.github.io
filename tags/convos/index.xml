<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>convos on Suburban Nerd</title><link>https://marcus.nordaaker.com/tags/convos/</link><description>Recent content in convos on Suburban Nerd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Code released under the Apache 2.0 license.</copyright><lastBuildDate>Sat, 13 Jun 2020 00:00:00 +0200</lastBuildDate><atom:link href="https://marcus.nordaaker.com/tags/convos/index.xml" rel="self" type="application/rss+xml"/><item><title>Coturn for WebRTC NAT Traversal</title><link>https://marcus.nordaaker.com/post/coturn-for-webrtc-nat-traversal/</link><pubDate>Sat, 13 Jun 2020 00:00:00 +0200</pubDate><guid>https://marcus.nordaaker.com/post/coturn-for-webrtc-nat-traversal/</guid><description>This article will show you how to set up Coturn. This is a service that allows hosts behind NAT to communicate peer to peer with webrtc. STUN is helping to negotiate port/ip and TURN will proxy the actual traffic if all else fails.
We&amp;rsquo;re using this with Convos&amp;rsquo; video IRC feature, but the same applies to other WebRTC projects.
Installation I&amp;rsquo;ll be assuming you&amp;rsquo;re on Ubutunu for this tutorial, so users on other distros will have to adjust the setup for their environment.</description></item></channel></rss>