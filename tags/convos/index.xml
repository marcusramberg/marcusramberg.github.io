<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>convos on marcus</title><link>https://marcus.means.no/tags/convos/</link><description>Recent content in convos on marcus</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Code released under the MIT license.</copyright><lastBuildDate>Sat, 19 Dec 2020 19:49:00 +0100</lastBuildDate><atom:link href="https://marcus.means.no/tags/convos/index.xml" rel="self" type="application/rss+xml"/><item><title>Nice article about Convos</title><link>https://marcus.means.no/post/2020-12-19-nice-article-about-convos/</link><pubDate>Sat, 19 Dec 2020 19:49:00 +0100</pubDate><guid>https://marcus.means.no/post/2020-12-19-nice-article-about-convos/</guid><description>As some of you might know, I helped start, and spuriously contribute to a web based IRC client called Convos - This post is one of the better introductions to Convos and IRC out there. Worth checking out if you want to learn more :)</description></item><item><title>Coturn for WebRTC NAT Traversal</title><link>https://marcus.means.no/post/coturn-for-webrtc-nat-traversal/</link><pubDate>Sat, 13 Jun 2020 00:00:00 +0200</pubDate><guid>https://marcus.means.no/post/coturn-for-webrtc-nat-traversal/</guid><description>This article will show you how to set up Coturn. This is a service that allows hosts behind NAT to communicate peer to peer with WebRTC. STUN is helping to negotiate port/ip and TURN will proxy the actual traffic if all else fails.
We&amp;rsquo;re using this with Convos&amp;rsquo; video IRC feature, but the same applies to other WebRTC projects.
Installation I&amp;rsquo;ll be assuming you&amp;rsquo;re on Ubuntu for this tutorial, so users on other distros will have to adjust the setup for their environment.</description></item></channel></rss>