<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ansible on marcus</title><link>https://marcus.means.no/tags/ansible/</link><description>Recent content in Ansible on marcus</description><generator>Hugo</generator><language>en-us</language><copyright>Code released under the MIT license.</copyright><lastBuildDate>Mon, 28 Jul 2025 14:37:46 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/ansible/index.xml" rel="self" type="application/rss+xml"/><item><title>Porting AnsibleModule to Perl.</title><link>https://marcus.means.no/post/2015-08-31-porting-ansiblemodule-to-perl/</link><pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2015-08-31-porting-ansiblemodule-to-perl/</guid><description>&lt;pre>&lt;code>“All animals are equal, but some animals are more equal than others.”
― George Orwell, Animal Farm
&lt;/code>&lt;/pre>
&lt;p>Ansible is a great orchestration tool, which I&amp;rsquo;ve used extensively for the last years to build infrastructure, or even
to accomplish routine tasks like restarting a group of web servers one by one or patching a bunch of servers for
critical security issues.&lt;/p>
&lt;p>Ansible is written in Python, but you can write modules in anything that can generate JSON. In fact, I wrote about
&lt;a href="2014-10-05-building-ansible-modules-with-perl-and-mojolicious">making a Perl based cloudflare module&lt;/a> earlier.
However, to quote the official documentation:&lt;/p></description></item><item><title>Building Ansible Modules with Perl and Mojolicious</title><link>https://marcus.means.no/post/2014-10-05-building-ansible-modules-with-perl-and-mojolicious/</link><pubDate>Sun, 05 Oct 2014 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2014-10-05-building-ansible-modules-with-perl-and-mojolicious/</guid><description>&lt;p>While setting up &lt;a href="http://theoutput.co/">Output&lt;/a>, we decided to automate all our
infrastructure using &lt;a href="http://ansible.com/">Ansible&lt;/a>. This lets us easily do
zero downtime releases and create new workers as needed to scale. We&amp;rsquo;ve got
roles for haproxy, postgresql, nginx, our app servers and a lot more. One thing
we&amp;rsquo;ve been handling manually so far is DNS. We&amp;rsquo;re happy Cloudflare users, and
they have one of the best DNS admin tools I&amp;rsquo;ve used, but still I felt like we
could do better.&lt;/p></description></item></channel></rss>