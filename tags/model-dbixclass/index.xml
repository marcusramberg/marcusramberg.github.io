<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>model dbix::class on marcus.means.no</title><link>https://marcus.means.no/tags/model-dbixclass/</link><description>Recent content in model dbix::class on marcus.means.no</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Code released under the Apache 2.0 license.</copyright><lastBuildDate>Fri, 07 Aug 2009 00:00:00 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/model-dbixclass/index.xml" rel="self" type="application/rss+xml"/><item><title>Model adaptors for Catalyst.</title><link>https://marcus.means.no/post/2009-08-07-model-adaptors-for-catalyst/</link><pubDate>Fri, 07 Aug 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-08-07-model-adaptors-for-catalyst/</guid><description>In a recent post Dave Rolsky points out some of his own best practices for Catalyst. While I've come around to agree with his first point, that Catalyst should generate a reusable config class for the user, I'm not so sure with regards to his model viewpoints.
For me, the strength of Catalyst's Model layer has always been the immense glue layer that allows me to configure any model in a predictable way.</description></item></channel></rss>