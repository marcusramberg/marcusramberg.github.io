<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on marcus</title><link>https://marcus.means.no/tags/git/</link><description>Recent content in Git on marcus</description><generator>Hugo</generator><language>en-us</language><copyright>Code released under the MIT license.</copyright><lastBuildDate>Mon, 28 Jul 2025 14:37:46 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>DBIx-Class about to switch to git</title><link>https://marcus.means.no/post/2010-06-01-dbix-class-about-to-switch-to-git/</link><pubDate>Tue, 01 Jun 2010 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2010-06-01-dbix-class-about-to-switch-to-git/</guid><description>&lt;blockquote>
 &lt;p>12:27 &amp;lt;ribasushi&amp;gt; a call to all git-heads&lt;/p>
 &lt;p>
 12:28 &amp;lt;ribasushi&amp;gt; recently haarg did a seemingly perfect conversion of
 dbic from svn to git (a non-trivial feat)
 &lt;/p>
 &lt;p>
 12:28 &amp;lt;ribasushi&amp;gt; I am calling for people who actually know git to
 randomly poke at the new history and notify me of whatever problems they see
 &lt;/p>
 &lt;p>
 12:28 &amp;lt;ribasushi&amp;gt;
 &lt;a href="http://github.com/haarg/DBIx-Class"
 >http://github.com/haarg/DBIx-Class&lt;/a
 >
 &lt;/p>
 &lt;p>
 12:29 &amp;lt;ribasushi&amp;gt; (also you can ascertain the quality of the
 conversion, and potentially draft haarg to do a catalyst conversion as well
 - it took him a couple of freaking hours to do dbic)
 &lt;/p></description></item><item><title>Github adds inline commit notes.</title><link>https://marcus.means.no/post/2010-03-28-github-adds-inline-commit-notes/</link><pubDate>Sun, 28 Mar 2010 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2010-03-28-github-adds-inline-commit-notes/</guid><description>&lt;p>Github is probably much of the reason we love using git at Nordaaker. The great overview and administration system, as well as the simple no-nonsense issue tracker works very efficiently for us. Now github has added another feature that I think will help us collaborating efficiently on code.&lt;/p>
&lt;p>Inline commit notes lets you comment anywhere in a commit, lending itself to quick code reviews and clarifications.&lt;/p></description></item><item><title>GitHub:FI pricing now public</title><link>https://marcus.means.no/post/2009-06-11-githubfi-pricing-now-public/</link><pubDate>Thu, 11 Jun 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-06-11-githubfi-pricing-now-public/</guid><description>&lt;p>
 GitHub created a headache for themselves at the initial launch of their
 in-house hosting option for companies wanting to use GitHub.
&lt;/p>
&lt;blockquote>
 &lt;p>
 That, coupled with the fact that we wanted companies to sign an NDA before
 receiving their quote, slowed the entire process down. It also bewildered
 more than a few people wondering why lawyers needed to be involved just to
 figure out how much the product cost.
 &lt;/p>
&lt;/blockquote>
&lt;p>
 Well, now they are up for everybody to see, but boy, with prices like that, I
 can see why they would like to keep them secret. $600/user/year. First year up
 front. For us, having 5 accounts, which is what we get with their 'Small'
 plan, it would be an upgrade from 144 USD to 7200 USD per year. After the
 first year we'd have to add 750$ a year if we want standard support. I doubt
 this is a very viable plan for most development shops. Specially considering
 &lt;a href="http://gitorious.org/">Gitorious&lt;/a> is open source.
&lt;/p></description></item><item><title>Migrating SVN repositories to Git, The Right Way</title><link>https://marcus.means.no/post/2009-06-11-migrating-svn-repositories-to-git-the-right-way/</link><pubDate>Thu, 11 Jun 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-06-11-migrating-svn-repositories-to-git-the-right-way/</guid><description>&lt;p>
 Yuval takes our hand and guides us through the proper process for migrating
 your SVN repository to Git:
&lt;/p>
&lt;blockquote>
 &lt;p>
 Having an accurate revision control history is very helpful for tracking
 down regressions. Here's my take on how to do this properly.
 &lt;/p>
&lt;/blockquote>
&lt;p>
 Hopefully someone can use this to migrate over Catalyst-Runtime to our
 spanking new Catalyst git repository.
&lt;/p></description></item><item><title>Gitorious now powered by norwegian company</title><link>https://marcus.means.no/post/2009-05-12-gitorious-now-powered-by-norwegian-company/</link><pubDate>Tue, 12 May 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-05-12-gitorious-now-powered-by-norwegian-company/</guid><description>&lt;p>Even though we're currently using &lt;a href="http://github.com/">github&lt;/a> for all our git hosting needs, we do like the open source alternative &lt;a href="http://gitorious.org">gitorious&lt;/a>. It makes us happy that it's now officially supported by some of our favorite rubyists from Oslo.&lt;/p>
&lt;blockquote>&lt;p>Gitorious now is a project maintained by Shortcut AS, which I co-founded. Shortcut AS now officially supports and develops Gitorious in cooperation with contributors outside Shortcut. Gitorious is, and will continue to be, 100% free software, licensed under the Affero GPL.&lt;/p></description></item><item><title>Using github's forking features.</title><link>https://marcus.means.no/post/2009-03-30-using-githubs-forking-features/</link><pubDate>Mon, 30 Mar 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-03-30-using-githubs-forking-features/</guid><description>&lt;p>
 A few week back, I commented some concerns about
 &lt;a
 href="http://marcus.nordaaker.com/2009/03/git-results-in-silosgit-results-in-silos/"
 >git causing silos&lt;/a
 >. I think this is a really good post by chris from github, illustrating the
 advantages of fully distributed development:
&lt;/p>
&lt;blockquote>
 &lt;p>
 It may seem strange, and perhaps even like a lot of work. “Why should I have
 to check to see which is the most current? In the old model, there’s always
 a canonical repository.”
 &lt;/p>
 &lt;p>
 In the old model, action-web-service wouldn’t have made it past 1.2.6.
 Welcome to distributed version control.
 &lt;/p></description></item><item><title>Easy remote branches with git</title><link>https://marcus.means.no/post/2009-03-12-easy-remote-branches-with-git/</link><pubDate>Thu, 12 Mar 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-03-12-easy-remote-branches-with-git/</guid><description>&lt;p>Think remote branch management is a hassle with git? This nice ruby-based helper should sort you out:&lt;/p>
&lt;pre>$ sudo gem install git_remote_branch
...
$ grb
&lt;/pre>
&lt;p>To get a quick explanation of how it works. Or read on at &lt;a href="http://gitready.com/advanced/2009/03/11/easily-manage-git-remote-branches.html">Git Ready&lt;/a>&lt;/p></description></item><item><title>Git results in silos?</title><link>https://marcus.means.no/post/2009-03-09-git-results-in-silos/</link><pubDate>Mon, 09 Mar 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-03-09-git-results-in-silos/</guid><description>&lt;p>
 &lt;em
 >Simon Wistow worries that the distributed nature of git results in
 fragmented software projects:&lt;/em
 >
&lt;/p>
&lt;blockquote>
 &lt;p>
 That model works well for Linux. Maybe. I'll presume it does. Git eases the
 pain points expressed by Andrew Morton, the maintainer of the -mm tree, in
 this message entitled "This Just Isn't Working Any More"
 &lt;/p>
 &lt;p>In short, it makes siloing easier.&lt;/p>
&lt;/blockquote>
&lt;p>
 My immediate reaction to reading his post was to think of the old saying
 ‹‹Guns don't kill people, people kill people››. In fact, my experiences with
 forks so far has been two cases of forking repos on github, and doing a pull
 request to the author when my fixes were fit to be included in the main
 distribution. In both cases the authors included my changes in their versions.
&lt;/p></description></item><item><title>Automatic deployment with Catalyst and Git</title><link>https://marcus.means.no/post/2009-02-15-automatic-deployment-with-catalyst-and-git/</link><pubDate>Sun, 15 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-15-automatic-deployment-with-catalyst-and-git/</guid><description>&lt;p>
 Mike Nachbaur has written a description of how he deploys his Catalyst-based
 site to production using git and catalyst, while auto-updating dependencies
 and ensuring that his tests har run successfully. We currently deploy
 &lt;a href="http://iusethis.com/">iusethis&lt;/a> in a similar fashion, although a
 little bit more manually, and with a staging server to test larger roll-outs.
&lt;/p></description></item><item><title>Install modules via the CPAN shell from github</title><link>https://marcus.means.no/post/2009-02-15-install-modules-via-the-cpan-shell-from-github/</link><pubDate>Sun, 15 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-15-install-modules-via-the-cpan-shell-from-github/</guid><description>&lt;p>Nice hack by Miyagawa. I'd prefer if Perl continued to have a distributed delivery mechanism tho :-)&lt;/p></description></item><item><title>Using rebase with git pull</title><link>https://marcus.means.no/post/2009-02-12-using-rebase-with-git-pull/</link><pubDate>Thu, 12 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-12-using-rebase-with-git-pull/</guid><description>&lt;p>Great tip about using rebase when you pull from remote to get a cleaner git commit timeline.&lt;/p></description></item><item><title>eg makes it really easy for svn users to switch to git</title><link>https://marcus.means.no/post/2009-02-04-eg-makes-it-really-easy-for-svn-users-to-switch-to-git/</link><pubDate>Wed, 04 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-04-eg-makes-it-really-easy-for-svn-users-to-switch-to-git/</guid><description>&lt;p>Are you trying to sell in git to your colleagues, who are afraid of learning anything new? easy git might be the ticket to convince them. Check out the side-by-side comparison on how to do things in svn and eg&lt;/p></description></item></channel></rss>