<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript on marcus</title><link>https://marcus.means.no/tags/javascript/</link><description>Recent content in Javascript on marcus</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Code released under the Apache 2.0 license.</copyright><lastBuildDate>Wed, 11 Jul 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Don't animate scrollTo of the body on iOS.</title><link>https://marcus.means.no/post/2012-07-11-dont-animate-scrollto-of-the-body-on-ios/</link><pubDate>Wed, 11 Jul 2012 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2012-07-11-dont-animate-scrollto-of-the-body-on-ios/</guid><description>Animate body.offsetTop and body.offsetLeft works great on the desktop, but is hugely buggy on MobileSafari. Instead, make a viewport div that fills the screen, and animate the offset on that.
I hope this helps someone, as I spent 3 hours figuring it out.</description></item><item><title>Mozilla Javascript documentation</title><link>https://marcus.means.no/post/2010-09-28-mozilla-javascript-documentation/</link><pubDate>Tue, 28 Sep 2010 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2010-09-28-mozilla-javascript-documentation/</guid><description>﻿</description></item><item><title>Testing JavaScript from Perl</title><link>https://marcus.means.no/post/2009-11-06-testing-javascript-from-perl/</link><pubDate>Fri, 06 Nov 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-11-06-testing-javascript-from-perl/</guid><description>If you want to write tests for your JavaScript code from Perl, Claes' module Test::JavaScript::More comes in handy. This module works by evaling everything from the use line as JavaScript. Of course, now you're mixing two languages in one file, which is not going to make any of your syntax validators happy. However, loading it like this will please both perl and jslint:
m| /* |; # Comment out JavaScript use Test::JavaScript::More; __END__ = ''; // It's is all JS from here.</description></item><item><title>3D with HTML5 Canvas series</title><link>https://marcus.means.no/post/2009-08-06-3d-with-html5-canvas-series/</link><pubDate>Thu, 06 Aug 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-08-06-3d-with-html5-canvas-series/</guid><description>Mr Speaker is doing a series of posts on how to do 3d graphics with the HTML 5 Canvas:
This introductory post – to set up viewer expectations A 3D starfield – to learn how to project points in 3D 2D shape rotation – gotta rotate stuff, and that seems hard 3D wireframe drawing – draw a cube! Yeah! 3D wireframe rotating &amp; moving – spin it! ‘Shaded’ 3D model – colour it in.</description></item><item><title>Glaring omission from JSON Spec.</title><link>https://marcus.means.no/post/2009-03-06-glaring-omission-from-json-spec/</link><pubDate>Fri, 06 Mar 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-03-06-glaring-omission-from-json-spec/</guid><description>JSON has become a popular data-exchange format lately, and it's even been adopted as a config format by some. It's apparently useful for this, with an easily definable syntax, and fairly simple to understand for the en user. However, one factor that could hamper the adoption of JSON is the lack of comment support. This is a really strange omission. After all at JSON is really just a Javascript data structure, and JavaScript does support both the // and /* comment */ style.</description></item><item><title>What's next for Google Chrome</title><link>https://marcus.means.no/post/2009-02-26-whats-next-for-google-chrome/</link><pubDate>Thu, 26 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-26-whats-next-for-google-chrome/</guid><description>"If you look at the history of JavaScript it was originally designed to do things like have a pushable button, but it moved beyond that to become what nobody expected; namely a programming language for web applications.
I believe that with the current race to improve javascript performance, JS stands a good chance of being the language to use both on the server and the client in the near future. It is interesting to read about Google's motivations, since they are somewhat on both sides of the table on this issue.</description></item><item><title>Javascript Uri object</title><link>https://marcus.means.no/post/2009-02-14-javascript-uri-object/</link><pubDate>Sat, 14 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-14-javascript-uri-object/</guid><description>Need to deal with Uris in a structured way in your client side code? This project is inspired by the Perl URI class, which is the defacto way of manipulating Resource Identifiers in Perl.</description></item><item><title>Adding smooth keyboard navigation to your site using javascript and jQuery.</title><link>https://marcus.means.no/post/2009-02-09-adding-keyboard-navigation-for-your-site-with-jquery/</link><pubDate>Mon, 09 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-09-adding-keyboard-navigation-for-your-site-with-jquery/</guid><description>One of Arne's long-standing wishes for our video bookmarking site iwatchthis.com has been proper keyboard navigation. Today I finally found some tuits, and Just Fucking Did It. Turns out that with a couple of javascript libraries, it was surprisingly easy. Step one was the keyboard shortcuts library, which let you hook up to keyboard input in this simple fashion:
shortcut('up',function() { alert('Lucy in the sky with diamonds'); }) However, rather than bore you further you with Beatles lyrics, I hooked it up to the excellent scrollTo jQuery extension, which lets you smoothly scroll to any anchor in in the page (I added anchors into the video item for convenience):</description></item><item><title>Advanced Javascript debugging</title><link>https://marcus.means.no/post/2009-02-03-advanced-javascript-debugging/</link><pubDate>Tue, 03 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-03-advanced-javascript-debugging/</guid><description>Good article from alistapart showing a good workflow for debugging your javascript code with firebug and other available tools.</description></item><item><title>Joose 2.0 released</title><link>https://marcus.means.no/post/2009-02-01-joose-20-released/</link><pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-01-joose-20-released/</guid><description>Joose, the javascript meta object system inspired by Moose recently released version 2.0 of their framework adding support for offical support for types/sub types as well as coercisons. There are also a bunch of other changes, read on at the original announcement. You can also check out the project homepage.</description></item></channel></rss>