<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript on marcus</title><link>https://marcus.means.no/tags/javascript/</link><description>Recent content in Javascript on marcus</description><generator>Hugo</generator><language>en-us</language><copyright>Code released under the MIT license.</copyright><lastBuildDate>Sat, 06 Sep 2025 20:02:38 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Don't animate scrollTo of the body on iOS.</title><link>https://marcus.means.no/post/2012-07-11-dont-animate-scrollto-of-the-body-on-ios/</link><pubDate>Wed, 11 Jul 2012 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2012-07-11-dont-animate-scrollto-of-the-body-on-ios/</guid><description>&lt;p>Animate body.offsetTop and body.offsetLeft works great on the desktop, but  is hugely buggy on MobileSafari. Instead, make a viewport div that fills the screen, and animate the offset on that.&lt;/p>
&lt;p>I hope this helps someone, as I spent 3 hours figuring it out.&lt;/p></description></item><item><title>Mozilla Javascript documentation</title><link>https://marcus.means.no/post/2010-09-28-mozilla-javascript-documentation/</link><pubDate>Tue, 28 Sep 2010 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2010-09-28-mozilla-javascript-documentation/</guid><description>&lt;p>﻿&lt;a title="JavaScript JS Documentation: JS String match, JavaScript String match, JS String .match, JavaScript String .match" href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String">&lt;img src="http://static.jsconf.us/promotejsvs.png" alt="JavaScript JS Documentation: JS String match, JavaScript String match, JS String .match, JavaScript String .match" width="160" height="280" />&lt;/a>&lt;/p></description></item><item><title>Testing JavaScript from Perl</title><link>https://marcus.means.no/post/2009-11-06-testing-javascript-from-perl/</link><pubDate>Fri, 06 Nov 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-11-06-testing-javascript-from-perl/</guid><description>&lt;p>
 If you want to write tests for your JavaScript code from Perl, Claes' module
 &lt;a
 href="http://search.cpan.org/~claesjac/JavaScript-1.12/lib/Test/JavaScript/More.pm"
 >Test::JavaScript::More&lt;/a
 >
 comes in handy. This module works by eval-ing everything from the use line as
 JavaScript. Of course, now you're mixing two languages in one file, which is
 not going to make any of your syntax validators happy. However, loading it
 like this will please both perl and jslint:
&lt;/p>
&lt;pre>
m| /* |; # Comment out JavaScript
use Test::JavaScript::More;
__END__ = ''; // It's is all JS from here. */
ok(1,'Success!');
&lt;/pre>
&lt;p>
 One final note. I had some problems building the cpan module of JavaScript on
 OSX with SpiderMonkey from ports. If you have the same problem, get the
 &lt;a href="http://github.com/claesjac/javascript"
 >latest and greatest version&lt;/a
 >
 from GitHub, which fixes this issue.
&lt;/p></description></item><item><title>3D with HTML5 Canvas series</title><link>https://marcus.means.no/post/2009-08-06-3d-with-html5-canvas-series/</link><pubDate>Thu, 06 Aug 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-08-06-3d-with-html5-canvas-series/</guid><description>&lt;p>
 Mr Speaker is doing a series of posts on how to do 3d graphics with the HTML 5
 Canvas:
&lt;/p>
&lt;li>This introductory post – to set up viewer expectations&lt;/li>
&lt;li>A 3D starfield – to learn how to project points in 3D&lt;/li>
&lt;li>2D shape rotation – gotta rotate stuff, and that seems hard&lt;/li>
&lt;li>3D wire-frame drawing – draw a cube! Yeah!&lt;/li>
&lt;li>3D wire-frame rotating &amp; moving – spin it!&lt;/li>
&lt;li>‘Shaded’ 3D model – color it in.&lt;/li></description></item><item><title>Glaring omission from JSON Spec.</title><link>https://marcus.means.no/post/2009-03-06-glaring-omission-from-json-spec/</link><pubDate>Fri, 06 Mar 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-03-06-glaring-omission-from-json-spec/</guid><description>&lt;p>&lt;a href="http://www.json.org/">JSON&lt;/a> has become a popular data-exchange format lately, and it's even been adopted as a config format by some. It's apparently useful for this, with an easily definable syntax, and fairly simple to understand for the en user. However, one factor that could hamper the adoption of JSON is the lack of comment support. This is a really strange omission. After all at JSON is really just a Javascript data structure, and JavaScript does support both the // and /* comment */ style. &lt;/p></description></item><item><title>What's next for Google Chrome</title><link>https://marcus.means.no/post/2009-02-26-whats-next-for-google-chrome/</link><pubDate>Thu, 26 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-26-whats-next-for-google-chrome/</guid><description>&lt;blockquote>"If you look at the history of JavaScript it was originally designed to do things like have a push button, but it moved beyond that to become what nobody expected; namely a programming language for web applications.&lt;/p>&lt;/blockquote>
&lt;p>I believe that with the current race to improve javascript performance, JS stands a good chance of being the language to use both on the server and the client in the near future. It is interesting to read about Google's motivations, since they are somewhat on both sides of the table on this issue. It's just as important to them that other browsers improve their JS runtime as that Chrome does it, in order to support their JS heavy applications like GMail and Google Reader. &lt;/p></description></item><item><title>Javascript URI object</title><link>https://marcus.means.no/post/2009-02-14-javascript-uri-object/</link><pubDate>Sat, 14 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-14-javascript-uri-object/</guid><description>&lt;p>
 Need to deal with URIs in a structured way in your client side code? This
 project is inspired by the Perl
 &lt;a href="http://search.cpan.org/~gaas/URI-1.37/URI.pm">URI&lt;/a> class, which is
 the defacto way of manipulating Resource Identifiers in Perl.
&lt;/p></description></item><item><title>Adding smooth keyboard navigation to your site using javascript and jQuery.</title><link>https://marcus.means.no/post/2009-02-09-adding-keyboard-navigation-for-your-site-with-jquery/</link><pubDate>Mon, 09 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-09-adding-keyboard-navigation-for-your-site-with-jquery/</guid><description>&lt;p>
 One of Arne's long-standing wishes for our video bookmarking site
 &lt;a href="http://iwatchthis.com/">iwatchthis.com&lt;/a> has been proper keyboard
 navigation. Today I finally found some
 &lt;a href="http://www.perlfoundation.org/perl5/index.cgi?tuit">tuits&lt;/a>, and
 Just Fucking Did It.
&lt;/p>
&lt;p>
 Turns out that with a couple of javascript libraries, it was surprisingly
 easy. Step one was the
 &lt;a href="http://www.openjs.com/scripts/events/keyboard_shortcuts/"
 >keyboard shortcuts&lt;/a
 >
 library, which let you hook up to keyboard input in this simple fashion:
&lt;/p>
&lt;pre>
 shortcut('up',function() {
 alert('Lucy in the sky with diamonds');
 })&lt;/pre
>
&lt;p>
 However, rather than bore you further you with Beatles lyrics, I hooked it up
 to the excellent
 &lt;a href="http://flesler.blogspot.com/2007/10/jqueryscrollto.html">scrollTo&lt;/a>
 jQuery extension, which lets you smoothly scroll to any anchor in in the page
 (I added anchors into the video item for convenience):
&lt;/p></description></item><item><title>Advanced Javascript debugging</title><link>https://marcus.means.no/post/2009-02-03-advanced-javascript-debugging/</link><pubDate>Tue, 03 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-03-advanced-javascript-debugging/</guid><description>&lt;p>Good article from alistapart showing a good workflow for debugging your javascript code with firebug and other available tools.&lt;/p></description></item><item><title>Joose 2.0 released</title><link>https://marcus.means.no/post/2009-02-01-joose-20-released/</link><pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-01-joose-20-released/</guid><description>&lt;p>
 Joose, the javascript meta object system inspired by
 &lt;a href="http://www.iinteractive.com/moose/">Moose &lt;/a>recently released
 version 2.0 of their framework adding support for  official support for
 types/sub types as well as coercion. There are also a bunch of other changes,
 read on at the original announcement. You can also check out the
 &lt;a href="http://code.google.com/p/joose-js/">project homepage&lt;/a>.
&lt;/p></description></item></channel></rss>