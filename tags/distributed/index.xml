<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Distributed on marcus</title><link>https://marcus.means.no/tags/distributed/</link><description>Recent content in Distributed on marcus</description><generator>Hugo</generator><language>en-us</language><copyright>Code released under the MIT license.</copyright><lastBuildDate>Tue, 02 Apr 2024 04:27:33 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/distributed/index.xml" rel="self" type="application/rss+xml"/><item><title>Lessons from distributed software development</title><link>https://marcus.means.no/post/2009-02-10-lessons-from-distributed-software-development/</link><pubDate>Tue, 10 Feb 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-02-10-lessons-from-distributed-software-development/</guid><description>&lt;p>I found this very interesting, and some of his experiences rang very true to me. Nordaaker's experiences with distributed software development so far has been fairly positive, but it does require a different mind set. In particular I do agree that followers of agile software development will have to adjust. &lt;/p>
&lt;p>On think that I absolutely agree with but find it hard to sell in to clients is the 'do not estimate' policy. Clients like to have an artificial idea of when their product will be done/what it'll cost, but the fact is that an accurate estimate is very hard to accomplish, and a thorough attempt will cost more than it's worth.&lt;/p></description></item></channel></rss>