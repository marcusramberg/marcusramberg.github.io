<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Oauth on marcus</title><link>https://marcus.means.no/tags/oauth/</link><description>Recent content in Oauth on marcus</description><generator>Hugo</generator><language>en-us</language><copyright>Code released under the MIT license.</copyright><lastBuildDate>Thu, 06 Feb 2025 20:05:04 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/oauth/index.xml" rel="self" type="application/rss+xml"/><item><title>Easily integrating your Mojolicious app with Facebook.</title><link>https://marcus.means.no/post/2011-01-08-easily-integrating-your-mojolicious-app-with-facebook/</link><pubDate>Sat, 08 Jan 2011 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2011-01-08-easily-integrating-your-mojolicious-app-with-facebook/</guid><description>&lt;p>Facebook has recently released a&lt;a href="http://graph.facebook.com/"> new Graph API&lt;/a>. It's a simple RESTish API, and uses the newly released OAuth2 spec for authorization. This makes it a great match for &lt;a href="http://mojolicio.us">Mojolicious&lt;/a>, and using my new &lt;a href="https://github.com/marcusramberg/mojolicious-plugin-oauth2">OAuth2&lt;/a> plugin (Also coming to a CPAN mirror near you), it's absolutely trivial.&lt;/p>
&lt;p>Here is a simple Lite example. Just register an app with facebook to get the key and secret.&lt;/p>
&lt;pre>
 use Mojolicious::Lite;
 # configure the plugin
 plugin 'oauth2', facebook => {
 key => 'my-key',
 secret => 'my-secret' };

 get 'hello' => sub { 
 My $self=shift;
 #redirects the gets the token asynchronous 
 $self->get_token('facebook', callback => sub {
 my $token=shift;
 my $me=$self->client->get(
 'https://graph.facebook.com/me?access_token='.$token)->res->json;
 $self->render( text =>
 "Hello ".$me->{name} );
 });
&lt;/pre>
&lt;p>As you can see, the plugin handles the request flow automatically. We then use the built in JSON parsing in the Mojolicious Client to turn the API data into structures we can work with in our application.&lt;/p></description></item></channel></rss>