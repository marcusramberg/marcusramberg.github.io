<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ruby on marcus</title><link>https://marcus.means.no/tags/ruby/</link><description>Recent content in ruby on marcus</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Code released under the Apache 2.0 license.</copyright><lastBuildDate>Thu, 15 May 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://marcus.means.no/tags/ruby/index.xml" rel="self" type="application/rss+xml"/><item><title>Improved init.d script for unicorn</title><link>https://marcus.means.no/post/2014-05-15-better-init.d-script-for-unicorn/</link><pubDate>Thu, 15 May 2014 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2014-05-15-better-init.d-script-for-unicorn/</guid><description>I went looking for a init.d script for Unicorn today, and Google seemed to give me various links to this one - It&amp;rsquo;s a nice and simple script, but it has a couple of issues. For one, it&amp;rsquo;s missing the LSB header, and more importantly it is missing status.
This does not make Ansible very happy, as it is using the status to check if the service is running before enforcing state=stopped or state=running.</description></item><item><title>Using Cruise Control with Perl projects</title><link>https://marcus.means.no/post/2009-06-03-using-cruise-control-with-perl-projects/</link><pubDate>Wed, 03 Jun 2009 00:00:00 +0000</pubDate><guid>https://marcus.means.no/post/2009-06-03-using-cruise-control-with-perl-projects/</guid><description>I often</description></item></channel></rss>